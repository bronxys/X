import { FfiHandle } from './napi/native.js';
import type { EncryptionType } from './proto/e2ee_pb.js';
import type { OwnedTrackPublication, TrackKind, TrackPublicationInfo, TrackSource } from './proto/track_pb.js';
import type { Track } from './track.js';
export declare abstract class TrackPublication {
    /** @internal */
    ffiHandle: FfiHandle;
    /** @internal */
    info: TrackPublicationInfo;
    track?: Track;
    constructor(ownedInfo: OwnedTrackPublication);
    get sid(): string;
    get name(): string;
    get kind(): TrackKind;
    get source(): TrackSource;
    get simulcasted(): boolean;
    get width(): number;
    get height(): number;
    get mimeType(): string;
    get muted(): boolean;
    get encryptionType(): EncryptionType;
}
export declare class LocalTrackPublication extends TrackPublication {
    private firstSubscription;
    private firstSubscriptionResolver;
    constructor(ownedInfo: OwnedTrackPublication);
    waitForSubscription(): Promise<void>;
    /** @internal */
    resolveFirstSubscription(): void;
}
export declare class RemoteTrackPublication extends TrackPublication {
    subscribed: boolean;
    constructor(ownedInfo: OwnedTrackPublication);
    setSubscribed(subscribed: boolean): void;
}
//# sourceMappingURL=track_publication.d.ts.map