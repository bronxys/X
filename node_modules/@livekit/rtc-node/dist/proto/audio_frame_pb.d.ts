import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { FfiOwnedHandle } from "./handle_pb.js";
import type { TrackSource } from "./track_pb.js";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file audio_frame.proto.
 */
export declare const file_audio_frame: GenFile;
/**
 * Create a new AudioStream
 * AudioStream is used to receive audio frames from a track
 *
 * @generated from message livekit.proto.NewAudioStreamRequest
 */
export type NewAudioStreamRequest = Message<"livekit.proto.NewAudioStreamRequest"> & {
    /**
     * @generated from field: required uint64 track_handle = 1;
     */
    trackHandle: bigint;
    /**
     * @generated from field: required livekit.proto.AudioStreamType type = 2;
     */
    type: AudioStreamType;
    /**
     * @generated from field: optional uint32 sample_rate = 3;
     */
    sampleRate: number;
    /**
     * @generated from field: optional uint32 num_channels = 4;
     */
    numChannels: number;
};
/**
 * Describes the message livekit.proto.NewAudioStreamRequest.
 * Use `create(NewAudioStreamRequestSchema)` to create a new message.
 */
export declare const NewAudioStreamRequestSchema: GenMessage<NewAudioStreamRequest>;
/**
 * @generated from message livekit.proto.NewAudioStreamResponse
 */
export type NewAudioStreamResponse = Message<"livekit.proto.NewAudioStreamResponse"> & {
    /**
     * @generated from field: required livekit.proto.OwnedAudioStream stream = 1;
     */
    stream?: OwnedAudioStream;
};
/**
 * Describes the message livekit.proto.NewAudioStreamResponse.
 * Use `create(NewAudioStreamResponseSchema)` to create a new message.
 */
export declare const NewAudioStreamResponseSchema: GenMessage<NewAudioStreamResponse>;
/**
 * @generated from message livekit.proto.AudioStreamFromParticipantRequest
 */
export type AudioStreamFromParticipantRequest = Message<"livekit.proto.AudioStreamFromParticipantRequest"> & {
    /**
     * @generated from field: required uint64 participant_handle = 1;
     */
    participantHandle: bigint;
    /**
     * @generated from field: required livekit.proto.AudioStreamType type = 2;
     */
    type: AudioStreamType;
    /**
     * @generated from field: optional livekit.proto.TrackSource track_source = 3;
     */
    trackSource: TrackSource;
    /**
     * @generated from field: optional uint32 sample_rate = 5;
     */
    sampleRate: number;
    /**
     * @generated from field: optional uint32 num_channels = 6;
     */
    numChannels: number;
};
/**
 * Describes the message livekit.proto.AudioStreamFromParticipantRequest.
 * Use `create(AudioStreamFromParticipantRequestSchema)` to create a new message.
 */
export declare const AudioStreamFromParticipantRequestSchema: GenMessage<AudioStreamFromParticipantRequest>;
/**
 * @generated from message livekit.proto.AudioStreamFromParticipantResponse
 */
export type AudioStreamFromParticipantResponse = Message<"livekit.proto.AudioStreamFromParticipantResponse"> & {
    /**
     * @generated from field: required livekit.proto.OwnedAudioStream stream = 1;
     */
    stream?: OwnedAudioStream;
};
/**
 * Describes the message livekit.proto.AudioStreamFromParticipantResponse.
 * Use `create(AudioStreamFromParticipantResponseSchema)` to create a new message.
 */
export declare const AudioStreamFromParticipantResponseSchema: GenMessage<AudioStreamFromParticipantResponse>;
/**
 * Create a new AudioSource
 *
 * @generated from message livekit.proto.NewAudioSourceRequest
 */
export type NewAudioSourceRequest = Message<"livekit.proto.NewAudioSourceRequest"> & {
    /**
     * @generated from field: required livekit.proto.AudioSourceType type = 1;
     */
    type: AudioSourceType;
    /**
     * @generated from field: optional livekit.proto.AudioSourceOptions options = 2;
     */
    options?: AudioSourceOptions;
    /**
     * @generated from field: required uint32 sample_rate = 3;
     */
    sampleRate: number;
    /**
     * @generated from field: required uint32 num_channels = 4;
     */
    numChannels: number;
    /**
     * @generated from field: optional uint32 queue_size_ms = 5;
     */
    queueSizeMs: number;
};
/**
 * Describes the message livekit.proto.NewAudioSourceRequest.
 * Use `create(NewAudioSourceRequestSchema)` to create a new message.
 */
export declare const NewAudioSourceRequestSchema: GenMessage<NewAudioSourceRequest>;
/**
 * @generated from message livekit.proto.NewAudioSourceResponse
 */
export type NewAudioSourceResponse = Message<"livekit.proto.NewAudioSourceResponse"> & {
    /**
     * @generated from field: required livekit.proto.OwnedAudioSource source = 1;
     */
    source?: OwnedAudioSource;
};
/**
 * Describes the message livekit.proto.NewAudioSourceResponse.
 * Use `create(NewAudioSourceResponseSchema)` to create a new message.
 */
export declare const NewAudioSourceResponseSchema: GenMessage<NewAudioSourceResponse>;
/**
 * Push a frame to an AudioSource
 * The data provided must be available as long as the client receive the callback.
 *
 * @generated from message livekit.proto.CaptureAudioFrameRequest
 */
export type CaptureAudioFrameRequest = Message<"livekit.proto.CaptureAudioFrameRequest"> & {
    /**
     * @generated from field: required uint64 source_handle = 1;
     */
    sourceHandle: bigint;
    /**
     * @generated from field: required livekit.proto.AudioFrameBufferInfo buffer = 2;
     */
    buffer?: AudioFrameBufferInfo;
};
/**
 * Describes the message livekit.proto.CaptureAudioFrameRequest.
 * Use `create(CaptureAudioFrameRequestSchema)` to create a new message.
 */
export declare const CaptureAudioFrameRequestSchema: GenMessage<CaptureAudioFrameRequest>;
/**
 * @generated from message livekit.proto.CaptureAudioFrameResponse
 */
export type CaptureAudioFrameResponse = Message<"livekit.proto.CaptureAudioFrameResponse"> & {
    /**
     * @generated from field: required uint64 async_id = 1;
     */
    asyncId: bigint;
};
/**
 * Describes the message livekit.proto.CaptureAudioFrameResponse.
 * Use `create(CaptureAudioFrameResponseSchema)` to create a new message.
 */
export declare const CaptureAudioFrameResponseSchema: GenMessage<CaptureAudioFrameResponse>;
/**
 * @generated from message livekit.proto.CaptureAudioFrameCallback
 */
export type CaptureAudioFrameCallback = Message<"livekit.proto.CaptureAudioFrameCallback"> & {
    /**
     * @generated from field: required uint64 async_id = 1;
     */
    asyncId: bigint;
    /**
     * @generated from field: optional string error = 2;
     */
    error: string;
};
/**
 * Describes the message livekit.proto.CaptureAudioFrameCallback.
 * Use `create(CaptureAudioFrameCallbackSchema)` to create a new message.
 */
export declare const CaptureAudioFrameCallbackSchema: GenMessage<CaptureAudioFrameCallback>;
/**
 * @generated from message livekit.proto.ClearAudioBufferRequest
 */
export type ClearAudioBufferRequest = Message<"livekit.proto.ClearAudioBufferRequest"> & {
    /**
     * @generated from field: required uint64 source_handle = 1;
     */
    sourceHandle: bigint;
};
/**
 * Describes the message livekit.proto.ClearAudioBufferRequest.
 * Use `create(ClearAudioBufferRequestSchema)` to create a new message.
 */
export declare const ClearAudioBufferRequestSchema: GenMessage<ClearAudioBufferRequest>;
/**
 * @generated from message livekit.proto.ClearAudioBufferResponse
 */
export type ClearAudioBufferResponse = Message<"livekit.proto.ClearAudioBufferResponse"> & {};
/**
 * Describes the message livekit.proto.ClearAudioBufferResponse.
 * Use `create(ClearAudioBufferResponseSchema)` to create a new message.
 */
export declare const ClearAudioBufferResponseSchema: GenMessage<ClearAudioBufferResponse>;
/**
 * Create a new AudioResampler
 *
 * @generated from message livekit.proto.NewAudioResamplerRequest
 */
export type NewAudioResamplerRequest = Message<"livekit.proto.NewAudioResamplerRequest"> & {};
/**
 * Describes the message livekit.proto.NewAudioResamplerRequest.
 * Use `create(NewAudioResamplerRequestSchema)` to create a new message.
 */
export declare const NewAudioResamplerRequestSchema: GenMessage<NewAudioResamplerRequest>;
/**
 * @generated from message livekit.proto.NewAudioResamplerResponse
 */
export type NewAudioResamplerResponse = Message<"livekit.proto.NewAudioResamplerResponse"> & {
    /**
     * @generated from field: required livekit.proto.OwnedAudioResampler resampler = 1;
     */
    resampler?: OwnedAudioResampler;
};
/**
 * Describes the message livekit.proto.NewAudioResamplerResponse.
 * Use `create(NewAudioResamplerResponseSchema)` to create a new message.
 */
export declare const NewAudioResamplerResponseSchema: GenMessage<NewAudioResamplerResponse>;
/**
 * Remix and resample an audio frame
 *
 * @generated from message livekit.proto.RemixAndResampleRequest
 */
export type RemixAndResampleRequest = Message<"livekit.proto.RemixAndResampleRequest"> & {
    /**
     * @generated from field: required uint64 resampler_handle = 1;
     */
    resamplerHandle: bigint;
    /**
     * @generated from field: required livekit.proto.AudioFrameBufferInfo buffer = 2;
     */
    buffer?: AudioFrameBufferInfo;
    /**
     * @generated from field: required uint32 num_channels = 3;
     */
    numChannels: number;
    /**
     * @generated from field: required uint32 sample_rate = 4;
     */
    sampleRate: number;
};
/**
 * Describes the message livekit.proto.RemixAndResampleRequest.
 * Use `create(RemixAndResampleRequestSchema)` to create a new message.
 */
export declare const RemixAndResampleRequestSchema: GenMessage<RemixAndResampleRequest>;
/**
 * @generated from message livekit.proto.RemixAndResampleResponse
 */
export type RemixAndResampleResponse = Message<"livekit.proto.RemixAndResampleResponse"> & {
    /**
     * @generated from field: required livekit.proto.OwnedAudioFrameBuffer buffer = 1;
     */
    buffer?: OwnedAudioFrameBuffer;
};
/**
 * Describes the message livekit.proto.RemixAndResampleResponse.
 * Use `create(RemixAndResampleResponseSchema)` to create a new message.
 */
export declare const RemixAndResampleResponseSchema: GenMessage<RemixAndResampleResponse>;
/**
 * @generated from message livekit.proto.NewSoxResamplerRequest
 */
export type NewSoxResamplerRequest = Message<"livekit.proto.NewSoxResamplerRequest"> & {
    /**
     * @generated from field: required double input_rate = 1;
     */
    inputRate: number;
    /**
     * @generated from field: required double output_rate = 2;
     */
    outputRate: number;
    /**
     * @generated from field: required uint32 num_channels = 3;
     */
    numChannels: number;
    /**
     * @generated from field: required livekit.proto.SoxResamplerDataType input_data_type = 4;
     */
    inputDataType: SoxResamplerDataType;
    /**
     * @generated from field: required livekit.proto.SoxResamplerDataType output_data_type = 5;
     */
    outputDataType: SoxResamplerDataType;
    /**
     * @generated from field: required livekit.proto.SoxQualityRecipe quality_recipe = 6;
     */
    qualityRecipe: SoxQualityRecipe;
    /**
     * @generated from field: optional uint32 flags = 7;
     */
    flags: number;
};
/**
 * Describes the message livekit.proto.NewSoxResamplerRequest.
 * Use `create(NewSoxResamplerRequestSchema)` to create a new message.
 */
export declare const NewSoxResamplerRequestSchema: GenMessage<NewSoxResamplerRequest>;
/**
 * @generated from message livekit.proto.NewSoxResamplerResponse
 */
export type NewSoxResamplerResponse = Message<"livekit.proto.NewSoxResamplerResponse"> & {
    /**
     * @generated from oneof livekit.proto.NewSoxResamplerResponse.message
     */
    message: {
        /**
         * @generated from field: livekit.proto.OwnedSoxResampler resampler = 1;
         */
        value: OwnedSoxResampler;
        case: "resampler";
    } | {
        /**
         * @generated from field: string error = 2;
         */
        value: string;
        case: "error";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message livekit.proto.NewSoxResamplerResponse.
 * Use `create(NewSoxResamplerResponseSchema)` to create a new message.
 */
export declare const NewSoxResamplerResponseSchema: GenMessage<NewSoxResamplerResponse>;
/**
 * @generated from message livekit.proto.PushSoxResamplerRequest
 */
export type PushSoxResamplerRequest = Message<"livekit.proto.PushSoxResamplerRequest"> & {
    /**
     * @generated from field: required uint64 resampler_handle = 1;
     */
    resamplerHandle: bigint;
    /**
     * *const i16
     *
     * @generated from field: required uint64 data_ptr = 2;
     */
    dataPtr: bigint;
    /**
     * in bytes
     *
     * @generated from field: required uint32 size = 3;
     */
    size: number;
};
/**
 * Describes the message livekit.proto.PushSoxResamplerRequest.
 * Use `create(PushSoxResamplerRequestSchema)` to create a new message.
 */
export declare const PushSoxResamplerRequestSchema: GenMessage<PushSoxResamplerRequest>;
/**
 * @generated from message livekit.proto.PushSoxResamplerResponse
 */
export type PushSoxResamplerResponse = Message<"livekit.proto.PushSoxResamplerResponse"> & {
    /**
     * *const i16 (could be null)
     *
     * @generated from field: required uint64 output_ptr = 1;
     */
    outputPtr: bigint;
    /**
     * in bytes
     *
     * @generated from field: required uint32 size = 2;
     */
    size: number;
    /**
     * @generated from field: optional string error = 3;
     */
    error: string;
};
/**
 * Describes the message livekit.proto.PushSoxResamplerResponse.
 * Use `create(PushSoxResamplerResponseSchema)` to create a new message.
 */
export declare const PushSoxResamplerResponseSchema: GenMessage<PushSoxResamplerResponse>;
/**
 * @generated from message livekit.proto.FlushSoxResamplerRequest
 */
export type FlushSoxResamplerRequest = Message<"livekit.proto.FlushSoxResamplerRequest"> & {
    /**
     * @generated from field: required uint64 resampler_handle = 1;
     */
    resamplerHandle: bigint;
};
/**
 * Describes the message livekit.proto.FlushSoxResamplerRequest.
 * Use `create(FlushSoxResamplerRequestSchema)` to create a new message.
 */
export declare const FlushSoxResamplerRequestSchema: GenMessage<FlushSoxResamplerRequest>;
/**
 * @generated from message livekit.proto.FlushSoxResamplerResponse
 */
export type FlushSoxResamplerResponse = Message<"livekit.proto.FlushSoxResamplerResponse"> & {
    /**
     * *const i16 (could be null)
     *
     * @generated from field: required uint64 output_ptr = 1;
     */
    outputPtr: bigint;
    /**
     * in bytes
     *
     * @generated from field: required uint32 size = 2;
     */
    size: number;
    /**
     * @generated from field: optional string error = 3;
     */
    error: string;
};
/**
 * Describes the message livekit.proto.FlushSoxResamplerResponse.
 * Use `create(FlushSoxResamplerResponseSchema)` to create a new message.
 */
export declare const FlushSoxResamplerResponseSchema: GenMessage<FlushSoxResamplerResponse>;
/**
 * @generated from message livekit.proto.AudioFrameBufferInfo
 */
export type AudioFrameBufferInfo = Message<"livekit.proto.AudioFrameBufferInfo"> & {
    /**
     * *const i16
     *
     * @generated from field: required uint64 data_ptr = 1;
     */
    dataPtr: bigint;
    /**
     * @generated from field: required uint32 num_channels = 2;
     */
    numChannels: number;
    /**
     * @generated from field: required uint32 sample_rate = 3;
     */
    sampleRate: number;
    /**
     * @generated from field: required uint32 samples_per_channel = 4;
     */
    samplesPerChannel: number;
};
/**
 * Describes the message livekit.proto.AudioFrameBufferInfo.
 * Use `create(AudioFrameBufferInfoSchema)` to create a new message.
 */
export declare const AudioFrameBufferInfoSchema: GenMessage<AudioFrameBufferInfo>;
/**
 * @generated from message livekit.proto.OwnedAudioFrameBuffer
 */
export type OwnedAudioFrameBuffer = Message<"livekit.proto.OwnedAudioFrameBuffer"> & {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.AudioFrameBufferInfo info = 2;
     */
    info?: AudioFrameBufferInfo;
};
/**
 * Describes the message livekit.proto.OwnedAudioFrameBuffer.
 * Use `create(OwnedAudioFrameBufferSchema)` to create a new message.
 */
export declare const OwnedAudioFrameBufferSchema: GenMessage<OwnedAudioFrameBuffer>;
/**
 * @generated from message livekit.proto.AudioStreamInfo
 */
export type AudioStreamInfo = Message<"livekit.proto.AudioStreamInfo"> & {
    /**
     * @generated from field: required livekit.proto.AudioStreamType type = 1;
     */
    type: AudioStreamType;
};
/**
 * Describes the message livekit.proto.AudioStreamInfo.
 * Use `create(AudioStreamInfoSchema)` to create a new message.
 */
export declare const AudioStreamInfoSchema: GenMessage<AudioStreamInfo>;
/**
 * @generated from message livekit.proto.OwnedAudioStream
 */
export type OwnedAudioStream = Message<"livekit.proto.OwnedAudioStream"> & {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.AudioStreamInfo info = 2;
     */
    info?: AudioStreamInfo;
};
/**
 * Describes the message livekit.proto.OwnedAudioStream.
 * Use `create(OwnedAudioStreamSchema)` to create a new message.
 */
export declare const OwnedAudioStreamSchema: GenMessage<OwnedAudioStream>;
/**
 * @generated from message livekit.proto.AudioStreamEvent
 */
export type AudioStreamEvent = Message<"livekit.proto.AudioStreamEvent"> & {
    /**
     * @generated from field: required uint64 stream_handle = 1;
     */
    streamHandle: bigint;
    /**
     * @generated from oneof livekit.proto.AudioStreamEvent.message
     */
    message: {
        /**
         * @generated from field: livekit.proto.AudioFrameReceived frame_received = 2;
         */
        value: AudioFrameReceived;
        case: "frameReceived";
    } | {
        /**
         * @generated from field: livekit.proto.AudioStreamEOS eos = 3;
         */
        value: AudioStreamEOS;
        case: "eos";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message livekit.proto.AudioStreamEvent.
 * Use `create(AudioStreamEventSchema)` to create a new message.
 */
export declare const AudioStreamEventSchema: GenMessage<AudioStreamEvent>;
/**
 * @generated from message livekit.proto.AudioFrameReceived
 */
export type AudioFrameReceived = Message<"livekit.proto.AudioFrameReceived"> & {
    /**
     * @generated from field: required livekit.proto.OwnedAudioFrameBuffer frame = 1;
     */
    frame?: OwnedAudioFrameBuffer;
};
/**
 * Describes the message livekit.proto.AudioFrameReceived.
 * Use `create(AudioFrameReceivedSchema)` to create a new message.
 */
export declare const AudioFrameReceivedSchema: GenMessage<AudioFrameReceived>;
/**
 * @generated from message livekit.proto.AudioStreamEOS
 */
export type AudioStreamEOS = Message<"livekit.proto.AudioStreamEOS"> & {};
/**
 * Describes the message livekit.proto.AudioStreamEOS.
 * Use `create(AudioStreamEOSSchema)` to create a new message.
 */
export declare const AudioStreamEOSSchema: GenMessage<AudioStreamEOS>;
/**
 * @generated from message livekit.proto.AudioSourceOptions
 */
export type AudioSourceOptions = Message<"livekit.proto.AudioSourceOptions"> & {
    /**
     * @generated from field: required bool echo_cancellation = 1;
     */
    echoCancellation: boolean;
    /**
     * @generated from field: required bool noise_suppression = 2;
     */
    noiseSuppression: boolean;
    /**
     * @generated from field: required bool auto_gain_control = 3;
     */
    autoGainControl: boolean;
};
/**
 * Describes the message livekit.proto.AudioSourceOptions.
 * Use `create(AudioSourceOptionsSchema)` to create a new message.
 */
export declare const AudioSourceOptionsSchema: GenMessage<AudioSourceOptions>;
/**
 * @generated from message livekit.proto.AudioSourceInfo
 */
export type AudioSourceInfo = Message<"livekit.proto.AudioSourceInfo"> & {
    /**
     * @generated from field: required livekit.proto.AudioSourceType type = 2;
     */
    type: AudioSourceType;
};
/**
 * Describes the message livekit.proto.AudioSourceInfo.
 * Use `create(AudioSourceInfoSchema)` to create a new message.
 */
export declare const AudioSourceInfoSchema: GenMessage<AudioSourceInfo>;
/**
 * @generated from message livekit.proto.OwnedAudioSource
 */
export type OwnedAudioSource = Message<"livekit.proto.OwnedAudioSource"> & {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.AudioSourceInfo info = 2;
     */
    info?: AudioSourceInfo;
};
/**
 * Describes the message livekit.proto.OwnedAudioSource.
 * Use `create(OwnedAudioSourceSchema)` to create a new message.
 */
export declare const OwnedAudioSourceSchema: GenMessage<OwnedAudioSource>;
/**
 * @generated from message livekit.proto.AudioResamplerInfo
 */
export type AudioResamplerInfo = Message<"livekit.proto.AudioResamplerInfo"> & {};
/**
 * Describes the message livekit.proto.AudioResamplerInfo.
 * Use `create(AudioResamplerInfoSchema)` to create a new message.
 */
export declare const AudioResamplerInfoSchema: GenMessage<AudioResamplerInfo>;
/**
 * @generated from message livekit.proto.OwnedAudioResampler
 */
export type OwnedAudioResampler = Message<"livekit.proto.OwnedAudioResampler"> & {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.AudioResamplerInfo info = 2;
     */
    info?: AudioResamplerInfo;
};
/**
 * Describes the message livekit.proto.OwnedAudioResampler.
 * Use `create(OwnedAudioResamplerSchema)` to create a new message.
 */
export declare const OwnedAudioResamplerSchema: GenMessage<OwnedAudioResampler>;
/**
 * @generated from message livekit.proto.SoxResamplerInfo
 */
export type SoxResamplerInfo = Message<"livekit.proto.SoxResamplerInfo"> & {};
/**
 * Describes the message livekit.proto.SoxResamplerInfo.
 * Use `create(SoxResamplerInfoSchema)` to create a new message.
 */
export declare const SoxResamplerInfoSchema: GenMessage<SoxResamplerInfo>;
/**
 * @generated from message livekit.proto.OwnedSoxResampler
 */
export type OwnedSoxResampler = Message<"livekit.proto.OwnedSoxResampler"> & {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.SoxResamplerInfo info = 2;
     */
    info?: SoxResamplerInfo;
};
/**
 * Describes the message livekit.proto.OwnedSoxResampler.
 * Use `create(OwnedSoxResamplerSchema)` to create a new message.
 */
export declare const OwnedSoxResamplerSchema: GenMessage<OwnedSoxResampler>;
/**
 * @generated from enum livekit.proto.SoxResamplerDataType
 */
export declare enum SoxResamplerDataType {
    /**
     * TODO(theomonnom): support other datatypes (shouldn't really be needed)
     *
     * @generated from enum value: SOXR_DATATYPE_INT16I = 0;
     */
    SOXR_DATATYPE_INT16I = 0,
    /**
     * @generated from enum value: SOXR_DATATYPE_INT16S = 1;
     */
    SOXR_DATATYPE_INT16S = 1
}
/**
 * Describes the enum livekit.proto.SoxResamplerDataType.
 */
export declare const SoxResamplerDataTypeSchema: GenEnum<SoxResamplerDataType>;
/**
 * @generated from enum livekit.proto.SoxQualityRecipe
 */
export declare enum SoxQualityRecipe {
    /**
     * @generated from enum value: SOXR_QUALITY_QUICK = 0;
     */
    SOXR_QUALITY_QUICK = 0,
    /**
     * @generated from enum value: SOXR_QUALITY_LOW = 1;
     */
    SOXR_QUALITY_LOW = 1,
    /**
     * @generated from enum value: SOXR_QUALITY_MEDIUM = 2;
     */
    SOXR_QUALITY_MEDIUM = 2,
    /**
     * @generated from enum value: SOXR_QUALITY_HIGH = 3;
     */
    SOXR_QUALITY_HIGH = 3,
    /**
     * @generated from enum value: SOXR_QUALITY_VERYHIGH = 4;
     */
    SOXR_QUALITY_VERYHIGH = 4
}
/**
 * Describes the enum livekit.proto.SoxQualityRecipe.
 */
export declare const SoxQualityRecipeSchema: GenEnum<SoxQualityRecipe>;
/**
 * @generated from enum livekit.proto.SoxFlagBits
 */
export declare enum SoxFlagBits {
    /**
     * 1 << 0
     *
     * @generated from enum value: SOXR_ROLLOFF_SMALL = 0;
     */
    SOXR_ROLLOFF_SMALL = 0,
    /**
     * 1 << 1
     *
     * @generated from enum value: SOXR_ROLLOFF_MEDIUM = 1;
     */
    SOXR_ROLLOFF_MEDIUM = 1,
    /**
     * 1 << 2
     *
     * @generated from enum value: SOXR_ROLLOFF_NONE = 2;
     */
    SOXR_ROLLOFF_NONE = 2,
    /**
     * 1 << 3
     *
     * @generated from enum value: SOXR_HIGH_PREC_CLOCK = 3;
     */
    SOXR_HIGH_PREC_CLOCK = 3,
    /**
     * 1 << 4
     *
     * @generated from enum value: SOXR_DOUBLE_PRECISION = 4;
     */
    SOXR_DOUBLE_PRECISION = 4,
    /**
     * 1 << 5
     *
     * @generated from enum value: SOXR_VR = 5;
     */
    SOXR_VR = 5
}
/**
 * Describes the enum livekit.proto.SoxFlagBits.
 */
export declare const SoxFlagBitsSchema: GenEnum<SoxFlagBits>;
/**
 * @generated from enum livekit.proto.AudioStreamType
 */
export declare enum AudioStreamType {
    /**
     * @generated from enum value: AUDIO_STREAM_NATIVE = 0;
     */
    AUDIO_STREAM_NATIVE = 0,
    /**
     * @generated from enum value: AUDIO_STREAM_HTML = 1;
     */
    AUDIO_STREAM_HTML = 1
}
/**
 * Describes the enum livekit.proto.AudioStreamType.
 */
export declare const AudioStreamTypeSchema: GenEnum<AudioStreamType>;
/**
 * @generated from enum livekit.proto.AudioSourceType
 */
export declare enum AudioSourceType {
    /**
     * @generated from enum value: AUDIO_SOURCE_NATIVE = 0;
     */
    AUDIO_SOURCE_NATIVE = 0
}
/**
 * Describes the enum livekit.proto.AudioSourceType.
 */
export declare const AudioSourceTypeSchema: GenEnum<AudioSourceType>;
//# sourceMappingURL=audio_frame_pb.d.ts.map