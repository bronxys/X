import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { FfiOwnedHandle } from "./handle_pb.js";
import type { TrackSource } from "./track_pb.js";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file video_frame.proto.
 */
export declare const file_video_frame: GenFile;
/**
 * Create a new VideoStream
 * VideoStream is used to receive video frames from a track
 *
 * @generated from message livekit.proto.NewVideoStreamRequest
 */
export type NewVideoStreamRequest = Message<"livekit.proto.NewVideoStreamRequest"> & {
    /**
     * @generated from field: required uint64 track_handle = 1;
     */
    trackHandle: bigint;
    /**
     * @generated from field: required livekit.proto.VideoStreamType type = 2;
     */
    type: VideoStreamType;
    /**
     * Get the frame on a specific format
     *
     * @generated from field: optional livekit.proto.VideoBufferType format = 3;
     */
    format: VideoBufferType;
    /**
     * if true, stride will be set to width/chroma_width
     *
     * @generated from field: optional bool normalize_stride = 4;
     */
    normalizeStride: boolean;
};
/**
 * Describes the message livekit.proto.NewVideoStreamRequest.
 * Use `create(NewVideoStreamRequestSchema)` to create a new message.
 */
export declare const NewVideoStreamRequestSchema: GenMessage<NewVideoStreamRequest>;
/**
 * @generated from message livekit.proto.NewVideoStreamResponse
 */
export type NewVideoStreamResponse = Message<"livekit.proto.NewVideoStreamResponse"> & {
    /**
     * @generated from field: required livekit.proto.OwnedVideoStream stream = 1;
     */
    stream?: OwnedVideoStream;
};
/**
 * Describes the message livekit.proto.NewVideoStreamResponse.
 * Use `create(NewVideoStreamResponseSchema)` to create a new message.
 */
export declare const NewVideoStreamResponseSchema: GenMessage<NewVideoStreamResponse>;
/**
 * Request a video stream from a participant
 *
 * @generated from message livekit.proto.VideoStreamFromParticipantRequest
 */
export type VideoStreamFromParticipantRequest = Message<"livekit.proto.VideoStreamFromParticipantRequest"> & {
    /**
     * @generated from field: required uint64 participant_handle = 1;
     */
    participantHandle: bigint;
    /**
     * @generated from field: required livekit.proto.VideoStreamType type = 2;
     */
    type: VideoStreamType;
    /**
     * @generated from field: required livekit.proto.TrackSource track_source = 3;
     */
    trackSource: TrackSource;
    /**
     * @generated from field: optional livekit.proto.VideoBufferType format = 4;
     */
    format: VideoBufferType;
    /**
     * @generated from field: optional bool normalize_stride = 5;
     */
    normalizeStride: boolean;
};
/**
 * Describes the message livekit.proto.VideoStreamFromParticipantRequest.
 * Use `create(VideoStreamFromParticipantRequestSchema)` to create a new message.
 */
export declare const VideoStreamFromParticipantRequestSchema: GenMessage<VideoStreamFromParticipantRequest>;
/**
 * @generated from message livekit.proto.VideoStreamFromParticipantResponse
 */
export type VideoStreamFromParticipantResponse = Message<"livekit.proto.VideoStreamFromParticipantResponse"> & {
    /**
     * @generated from field: required livekit.proto.OwnedVideoStream stream = 1;
     */
    stream?: OwnedVideoStream;
};
/**
 * Describes the message livekit.proto.VideoStreamFromParticipantResponse.
 * Use `create(VideoStreamFromParticipantResponseSchema)` to create a new message.
 */
export declare const VideoStreamFromParticipantResponseSchema: GenMessage<VideoStreamFromParticipantResponse>;
/**
 * Create a new VideoSource
 * VideoSource is used to send video frame to a track
 *
 * @generated from message livekit.proto.NewVideoSourceRequest
 */
export type NewVideoSourceRequest = Message<"livekit.proto.NewVideoSourceRequest"> & {
    /**
     * @generated from field: required livekit.proto.VideoSourceType type = 1;
     */
    type: VideoSourceType;
    /**
     * Used to determine which encodings to use + simulcast layers
     * Most of the time it corresponds to the source resolution
     *
     * @generated from field: required livekit.proto.VideoSourceResolution resolution = 2;
     */
    resolution?: VideoSourceResolution;
};
/**
 * Describes the message livekit.proto.NewVideoSourceRequest.
 * Use `create(NewVideoSourceRequestSchema)` to create a new message.
 */
export declare const NewVideoSourceRequestSchema: GenMessage<NewVideoSourceRequest>;
/**
 * @generated from message livekit.proto.NewVideoSourceResponse
 */
export type NewVideoSourceResponse = Message<"livekit.proto.NewVideoSourceResponse"> & {
    /**
     * @generated from field: required livekit.proto.OwnedVideoSource source = 1;
     */
    source?: OwnedVideoSource;
};
/**
 * Describes the message livekit.proto.NewVideoSourceResponse.
 * Use `create(NewVideoSourceResponseSchema)` to create a new message.
 */
export declare const NewVideoSourceResponseSchema: GenMessage<NewVideoSourceResponse>;
/**
 * Push a frame to a VideoSource
 *
 * @generated from message livekit.proto.CaptureVideoFrameRequest
 */
export type CaptureVideoFrameRequest = Message<"livekit.proto.CaptureVideoFrameRequest"> & {
    /**
     * @generated from field: required uint64 source_handle = 1;
     */
    sourceHandle: bigint;
    /**
     * @generated from field: required livekit.proto.VideoBufferInfo buffer = 2;
     */
    buffer?: VideoBufferInfo;
    /**
     * In microseconds
     *
     * @generated from field: required int64 timestamp_us = 3;
     */
    timestampUs: bigint;
    /**
     * @generated from field: required livekit.proto.VideoRotation rotation = 4;
     */
    rotation: VideoRotation;
};
/**
 * Describes the message livekit.proto.CaptureVideoFrameRequest.
 * Use `create(CaptureVideoFrameRequestSchema)` to create a new message.
 */
export declare const CaptureVideoFrameRequestSchema: GenMessage<CaptureVideoFrameRequest>;
/**
 * @generated from message livekit.proto.CaptureVideoFrameResponse
 */
export type CaptureVideoFrameResponse = Message<"livekit.proto.CaptureVideoFrameResponse"> & {};
/**
 * Describes the message livekit.proto.CaptureVideoFrameResponse.
 * Use `create(CaptureVideoFrameResponseSchema)` to create a new message.
 */
export declare const CaptureVideoFrameResponseSchema: GenMessage<CaptureVideoFrameResponse>;
/**
 * @generated from message livekit.proto.VideoConvertRequest
 */
export type VideoConvertRequest = Message<"livekit.proto.VideoConvertRequest"> & {
    /**
     * @generated from field: optional bool flip_y = 1;
     */
    flipY: boolean;
    /**
     * @generated from field: required livekit.proto.VideoBufferInfo buffer = 2;
     */
    buffer?: VideoBufferInfo;
    /**
     * @generated from field: required livekit.proto.VideoBufferType dst_type = 3;
     */
    dstType: VideoBufferType;
};
/**
 * Describes the message livekit.proto.VideoConvertRequest.
 * Use `create(VideoConvertRequestSchema)` to create a new message.
 */
export declare const VideoConvertRequestSchema: GenMessage<VideoConvertRequest>;
/**
 * @generated from message livekit.proto.VideoConvertResponse
 */
export type VideoConvertResponse = Message<"livekit.proto.VideoConvertResponse"> & {
    /**
     * @generated from oneof livekit.proto.VideoConvertResponse.message
     */
    message: {
        /**
         * @generated from field: string error = 1;
         */
        value: string;
        case: "error";
    } | {
        /**
         * @generated from field: livekit.proto.OwnedVideoBuffer buffer = 2;
         */
        value: OwnedVideoBuffer;
        case: "buffer";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message livekit.proto.VideoConvertResponse.
 * Use `create(VideoConvertResponseSchema)` to create a new message.
 */
export declare const VideoConvertResponseSchema: GenMessage<VideoConvertResponse>;
/**
 * @generated from message livekit.proto.VideoResolution
 */
export type VideoResolution = Message<"livekit.proto.VideoResolution"> & {
    /**
     * @generated from field: required uint32 width = 1;
     */
    width: number;
    /**
     * @generated from field: required uint32 height = 2;
     */
    height: number;
    /**
     * @generated from field: required double frame_rate = 3;
     */
    frameRate: number;
};
/**
 * Describes the message livekit.proto.VideoResolution.
 * Use `create(VideoResolutionSchema)` to create a new message.
 */
export declare const VideoResolutionSchema: GenMessage<VideoResolution>;
/**
 * @generated from message livekit.proto.VideoBufferInfo
 */
export type VideoBufferInfo = Message<"livekit.proto.VideoBufferInfo"> & {
    /**
     * @generated from field: required livekit.proto.VideoBufferType type = 1;
     */
    type: VideoBufferType;
    /**
     * @generated from field: required uint32 width = 2;
     */
    width: number;
    /**
     * @generated from field: required uint32 height = 3;
     */
    height: number;
    /**
     * @generated from field: required uint64 data_ptr = 4;
     */
    dataPtr: bigint;
    /**
     * only for packed formats
     *
     * @generated from field: required uint32 stride = 6;
     */
    stride: number;
    /**
     * @generated from field: repeated livekit.proto.VideoBufferInfo.ComponentInfo components = 7;
     */
    components: VideoBufferInfo_ComponentInfo[];
};
/**
 * Describes the message livekit.proto.VideoBufferInfo.
 * Use `create(VideoBufferInfoSchema)` to create a new message.
 */
export declare const VideoBufferInfoSchema: GenMessage<VideoBufferInfo>;
/**
 * @generated from message livekit.proto.VideoBufferInfo.ComponentInfo
 */
export type VideoBufferInfo_ComponentInfo = Message<"livekit.proto.VideoBufferInfo.ComponentInfo"> & {
    /**
     * @generated from field: required uint64 data_ptr = 1;
     */
    dataPtr: bigint;
    /**
     * @generated from field: required uint32 stride = 2;
     */
    stride: number;
    /**
     * @generated from field: required uint32 size = 3;
     */
    size: number;
};
/**
 * Describes the message livekit.proto.VideoBufferInfo.ComponentInfo.
 * Use `create(VideoBufferInfo_ComponentInfoSchema)` to create a new message.
 */
export declare const VideoBufferInfo_ComponentInfoSchema: GenMessage<VideoBufferInfo_ComponentInfo>;
/**
 * @generated from message livekit.proto.OwnedVideoBuffer
 */
export type OwnedVideoBuffer = Message<"livekit.proto.OwnedVideoBuffer"> & {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.VideoBufferInfo info = 2;
     */
    info?: VideoBufferInfo;
};
/**
 * Describes the message livekit.proto.OwnedVideoBuffer.
 * Use `create(OwnedVideoBufferSchema)` to create a new message.
 */
export declare const OwnedVideoBufferSchema: GenMessage<OwnedVideoBuffer>;
/**
 * @generated from message livekit.proto.VideoStreamInfo
 */
export type VideoStreamInfo = Message<"livekit.proto.VideoStreamInfo"> & {
    /**
     * @generated from field: required livekit.proto.VideoStreamType type = 1;
     */
    type: VideoStreamType;
};
/**
 * Describes the message livekit.proto.VideoStreamInfo.
 * Use `create(VideoStreamInfoSchema)` to create a new message.
 */
export declare const VideoStreamInfoSchema: GenMessage<VideoStreamInfo>;
/**
 * @generated from message livekit.proto.OwnedVideoStream
 */
export type OwnedVideoStream = Message<"livekit.proto.OwnedVideoStream"> & {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.VideoStreamInfo info = 2;
     */
    info?: VideoStreamInfo;
};
/**
 * Describes the message livekit.proto.OwnedVideoStream.
 * Use `create(OwnedVideoStreamSchema)` to create a new message.
 */
export declare const OwnedVideoStreamSchema: GenMessage<OwnedVideoStream>;
/**
 * @generated from message livekit.proto.VideoStreamEvent
 */
export type VideoStreamEvent = Message<"livekit.proto.VideoStreamEvent"> & {
    /**
     * @generated from field: required uint64 stream_handle = 1;
     */
    streamHandle: bigint;
    /**
     * @generated from oneof livekit.proto.VideoStreamEvent.message
     */
    message: {
        /**
         * @generated from field: livekit.proto.VideoFrameReceived frame_received = 2;
         */
        value: VideoFrameReceived;
        case: "frameReceived";
    } | {
        /**
         * @generated from field: livekit.proto.VideoStreamEOS eos = 3;
         */
        value: VideoStreamEOS;
        case: "eos";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message livekit.proto.VideoStreamEvent.
 * Use `create(VideoStreamEventSchema)` to create a new message.
 */
export declare const VideoStreamEventSchema: GenMessage<VideoStreamEvent>;
/**
 * @generated from message livekit.proto.VideoFrameReceived
 */
export type VideoFrameReceived = Message<"livekit.proto.VideoFrameReceived"> & {
    /**
     * @generated from field: required livekit.proto.OwnedVideoBuffer buffer = 1;
     */
    buffer?: OwnedVideoBuffer;
    /**
     * In microseconds
     *
     * @generated from field: required int64 timestamp_us = 2;
     */
    timestampUs: bigint;
    /**
     * @generated from field: required livekit.proto.VideoRotation rotation = 3;
     */
    rotation: VideoRotation;
};
/**
 * Describes the message livekit.proto.VideoFrameReceived.
 * Use `create(VideoFrameReceivedSchema)` to create a new message.
 */
export declare const VideoFrameReceivedSchema: GenMessage<VideoFrameReceived>;
/**
 * @generated from message livekit.proto.VideoStreamEOS
 */
export type VideoStreamEOS = Message<"livekit.proto.VideoStreamEOS"> & {};
/**
 * Describes the message livekit.proto.VideoStreamEOS.
 * Use `create(VideoStreamEOSSchema)` to create a new message.
 */
export declare const VideoStreamEOSSchema: GenMessage<VideoStreamEOS>;
/**
 * @generated from message livekit.proto.VideoSourceResolution
 */
export type VideoSourceResolution = Message<"livekit.proto.VideoSourceResolution"> & {
    /**
     * @generated from field: required uint32 width = 1;
     */
    width: number;
    /**
     * @generated from field: required uint32 height = 2;
     */
    height: number;
};
/**
 * Describes the message livekit.proto.VideoSourceResolution.
 * Use `create(VideoSourceResolutionSchema)` to create a new message.
 */
export declare const VideoSourceResolutionSchema: GenMessage<VideoSourceResolution>;
/**
 * @generated from message livekit.proto.VideoSourceInfo
 */
export type VideoSourceInfo = Message<"livekit.proto.VideoSourceInfo"> & {
    /**
     * @generated from field: required livekit.proto.VideoSourceType type = 1;
     */
    type: VideoSourceType;
};
/**
 * Describes the message livekit.proto.VideoSourceInfo.
 * Use `create(VideoSourceInfoSchema)` to create a new message.
 */
export declare const VideoSourceInfoSchema: GenMessage<VideoSourceInfo>;
/**
 * @generated from message livekit.proto.OwnedVideoSource
 */
export type OwnedVideoSource = Message<"livekit.proto.OwnedVideoSource"> & {
    /**
     * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
     */
    handle?: FfiOwnedHandle;
    /**
     * @generated from field: required livekit.proto.VideoSourceInfo info = 2;
     */
    info?: VideoSourceInfo;
};
/**
 * Describes the message livekit.proto.OwnedVideoSource.
 * Use `create(OwnedVideoSourceSchema)` to create a new message.
 */
export declare const OwnedVideoSourceSchema: GenMessage<OwnedVideoSource>;
/**
 * @generated from enum livekit.proto.VideoCodec
 */
export declare enum VideoCodec {
    /**
     * @generated from enum value: VP8 = 0;
     */
    VP8 = 0,
    /**
     * @generated from enum value: H264 = 1;
     */
    H264 = 1,
    /**
     * @generated from enum value: AV1 = 2;
     */
    AV1 = 2,
    /**
     * @generated from enum value: VP9 = 3;
     */
    VP9 = 3
}
/**
 * Describes the enum livekit.proto.VideoCodec.
 */
export declare const VideoCodecSchema: GenEnum<VideoCodec>;
/**
 * @generated from enum livekit.proto.VideoRotation
 */
export declare enum VideoRotation {
    /**
     * @generated from enum value: VIDEO_ROTATION_0 = 0;
     */
    VIDEO_ROTATION_0 = 0,
    /**
     * @generated from enum value: VIDEO_ROTATION_90 = 1;
     */
    VIDEO_ROTATION_90 = 1,
    /**
     * @generated from enum value: VIDEO_ROTATION_180 = 2;
     */
    VIDEO_ROTATION_180 = 2,
    /**
     * @generated from enum value: VIDEO_ROTATION_270 = 3;
     */
    VIDEO_ROTATION_270 = 3
}
/**
 * Describes the enum livekit.proto.VideoRotation.
 */
export declare const VideoRotationSchema: GenEnum<VideoRotation>;
/**
 * @generated from enum livekit.proto.VideoBufferType
 */
export declare enum VideoBufferType {
    /**
     * @generated from enum value: RGBA = 0;
     */
    RGBA = 0,
    /**
     * @generated from enum value: ABGR = 1;
     */
    ABGR = 1,
    /**
     * @generated from enum value: ARGB = 2;
     */
    ARGB = 2,
    /**
     * @generated from enum value: BGRA = 3;
     */
    BGRA = 3,
    /**
     * @generated from enum value: RGB24 = 4;
     */
    RGB24 = 4,
    /**
     * @generated from enum value: I420 = 5;
     */
    I420 = 5,
    /**
     * @generated from enum value: I420A = 6;
     */
    I420A = 6,
    /**
     * @generated from enum value: I422 = 7;
     */
    I422 = 7,
    /**
     * @generated from enum value: I444 = 8;
     */
    I444 = 8,
    /**
     * @generated from enum value: I010 = 9;
     */
    I010 = 9,
    /**
     * @generated from enum value: NV12 = 10;
     */
    NV12 = 10
}
/**
 * Describes the enum livekit.proto.VideoBufferType.
 */
export declare const VideoBufferTypeSchema: GenEnum<VideoBufferType>;
/**
 * @generated from enum livekit.proto.VideoStreamType
 */
export declare enum VideoStreamType {
    /**
     * @generated from enum value: VIDEO_STREAM_NATIVE = 0;
     */
    VIDEO_STREAM_NATIVE = 0,
    /**
     * @generated from enum value: VIDEO_STREAM_WEBGL = 1;
     */
    VIDEO_STREAM_WEBGL = 1,
    /**
     * @generated from enum value: VIDEO_STREAM_HTML = 2;
     */
    VIDEO_STREAM_HTML = 2
}
/**
 * Describes the enum livekit.proto.VideoStreamType.
 */
export declare const VideoStreamTypeSchema: GenEnum<VideoStreamType>;
/**
 * @generated from enum livekit.proto.VideoSourceType
 */
export declare enum VideoSourceType {
    /**
     * @generated from enum value: VIDEO_SOURCE_NATIVE = 0;
     */
    VIDEO_SOURCE_NATIVE = 0
}
/**
 * Describes the enum livekit.proto.VideoSourceType.
 */
export declare const VideoSourceTypeSchema: GenEnum<VideoSourceType>;
//# sourceMappingURL=video_frame_pb.d.ts.map