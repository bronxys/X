// Copyright 2023 LiveKit, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_e2ee } from "./e2ee_pb.js";
import { file_handle } from "./handle_pb.js";
import { file_stats } from "./stats_pb.js";
/**
 * Describes the file track.proto.
 */
export const file_track = /*@__PURE__*/ fileDesc("Cgt0cmFjay5wcm90bxINbGl2ZWtpdC5wcm90byI+ChdDcmVhdGVWaWRlb1RyYWNrUmVxdWVzdBIMCgRuYW1lGAEgAigJEhUKDXNvdXJjZV9oYW5kbGUYAiACKAQiRAoYQ3JlYXRlVmlkZW9UcmFja1Jlc3BvbnNlEigKBXRyYWNrGAEgAigLMhkubGl2ZWtpdC5wcm90by5Pd25lZFRyYWNrIj4KF0NyZWF0ZUF1ZGlvVHJhY2tSZXF1ZXN0EgwKBG5hbWUYASACKAkSFQoNc291cmNlX2hhbmRsZRgCIAIoBCJEChhDcmVhdGVBdWRpb1RyYWNrUmVzcG9uc2USKAoFdHJhY2sYASACKAsyGS5saXZla2l0LnByb3RvLk93bmVkVHJhY2siJwoPR2V0U3RhdHNSZXF1ZXN0EhQKDHRyYWNrX2hhbmRsZRgBIAIoBCIkChBHZXRTdGF0c1Jlc3BvbnNlEhAKCGFzeW5jX2lkGAEgAigEIlsKEEdldFN0YXRzQ2FsbGJhY2sSEAoIYXN5bmNfaWQYASACKAQSDQoFZXJyb3IYAiABKAkSJgoFc3RhdHMYAyADKAsyFy5saXZla2l0LnByb3RvLlJ0Y1N0YXRzIgwKClRyYWNrRXZlbnQiowIKFFRyYWNrUHVibGljYXRpb25JbmZvEgsKA3NpZBgBIAIoCRIMCgRuYW1lGAIgAigJEiYKBGtpbmQYAyACKA4yGC5saXZla2l0LnByb3RvLlRyYWNrS2luZBIqCgZzb3VyY2UYBCACKA4yGi5saXZla2l0LnByb3RvLlRyYWNrU291cmNlEhMKC3NpbXVsY2FzdGVkGAUgAigIEg0KBXdpZHRoGAYgAigNEg4KBmhlaWdodBgHIAIoDRIRCgltaW1lX3R5cGUYCCACKAkSDQoFbXV0ZWQYCSACKAgSDgoGcmVtb3RlGAogAigIEjYKD2VuY3J5cHRpb25fdHlwZRgLIAIoDjIdLmxpdmVraXQucHJvdG8uRW5jcnlwdGlvblR5cGUieQoVT3duZWRUcmFja1B1YmxpY2F0aW9uEi0KBmhhbmRsZRgBIAIoCzIdLmxpdmVraXQucHJvdG8uRmZpT3duZWRIYW5kbGUSMQoEaW5mbxgCIAIoCzIjLmxpdmVraXQucHJvdG8uVHJhY2tQdWJsaWNhdGlvbkluZm8inwEKCVRyYWNrSW5mbxILCgNzaWQYASACKAkSDAoEbmFtZRgCIAIoCRImCgRraW5kGAMgAigOMhgubGl2ZWtpdC5wcm90by5UcmFja0tpbmQSMAoMc3RyZWFtX3N0YXRlGAQgAigOMhoubGl2ZWtpdC5wcm90by5TdHJlYW1TdGF0ZRINCgVtdXRlZBgFIAIoCBIOCgZyZW1vdGUYBiACKAgiYwoKT3duZWRUcmFjaxItCgZoYW5kbGUYASACKAsyHS5saXZla2l0LnByb3RvLkZmaU93bmVkSGFuZGxlEiYKBGluZm8YAiACKAsyGC5saXZla2l0LnByb3RvLlRyYWNrSW5mbyI7ChVMb2NhbFRyYWNrTXV0ZVJlcXVlc3QSFAoMdHJhY2tfaGFuZGxlGAEgAigEEgwKBG11dGUYAiACKAgiJwoWTG9jYWxUcmFja011dGVSZXNwb25zZRINCgVtdXRlZBgBIAIoCCJBChhFbmFibGVSZW1vdGVUcmFja1JlcXVlc3QSFAoMdHJhY2tfaGFuZGxlGAEgAigEEg8KB2VuYWJsZWQYAiACKAgiLAoZRW5hYmxlUmVtb3RlVHJhY2tSZXNwb25zZRIPCgdlbmFibGVkGAEgAigIKj0KCVRyYWNrS2luZBIQCgxLSU5EX1VOS05PV04QABIOCgpLSU5EX0FVRElPEAESDgoKS0lORF9WSURFTxACKoEBCgtUcmFja1NvdXJjZRISCg5TT1VSQ0VfVU5LTk9XThAAEhEKDVNPVVJDRV9DQU1FUkEQARIVChFTT1VSQ0VfTUlDUk9QSE9ORRACEhYKElNPVVJDRV9TQ1JFRU5TSEFSRRADEhwKGFNPVVJDRV9TQ1JFRU5TSEFSRV9BVURJTxAEKkQKC1N0cmVhbVN0YXRlEhEKDVNUQVRFX1VOS05PV04QABIQCgxTVEFURV9BQ1RJVkUQARIQCgxTVEFURV9QQVVTRUQQAkIQqgINTGl2ZUtpdC5Qcm90bw", [file_e2ee, file_handle, file_stats]);
/**
 * Describes the message livekit.proto.CreateVideoTrackRequest.
 * Use `create(CreateVideoTrackRequestSchema)` to create a new message.
 */
export const CreateVideoTrackRequestSchema = /*@__PURE__*/ messageDesc(file_track, 0);
/**
 * Describes the message livekit.proto.CreateVideoTrackResponse.
 * Use `create(CreateVideoTrackResponseSchema)` to create a new message.
 */
export const CreateVideoTrackResponseSchema = /*@__PURE__*/ messageDesc(file_track, 1);
/**
 * Describes the message livekit.proto.CreateAudioTrackRequest.
 * Use `create(CreateAudioTrackRequestSchema)` to create a new message.
 */
export const CreateAudioTrackRequestSchema = /*@__PURE__*/ messageDesc(file_track, 2);
/**
 * Describes the message livekit.proto.CreateAudioTrackResponse.
 * Use `create(CreateAudioTrackResponseSchema)` to create a new message.
 */
export const CreateAudioTrackResponseSchema = /*@__PURE__*/ messageDesc(file_track, 3);
/**
 * Describes the message livekit.proto.GetStatsRequest.
 * Use `create(GetStatsRequestSchema)` to create a new message.
 */
export const GetStatsRequestSchema = /*@__PURE__*/ messageDesc(file_track, 4);
/**
 * Describes the message livekit.proto.GetStatsResponse.
 * Use `create(GetStatsResponseSchema)` to create a new message.
 */
export const GetStatsResponseSchema = /*@__PURE__*/ messageDesc(file_track, 5);
/**
 * Describes the message livekit.proto.GetStatsCallback.
 * Use `create(GetStatsCallbackSchema)` to create a new message.
 */
export const GetStatsCallbackSchema = /*@__PURE__*/ messageDesc(file_track, 6);
/**
 * Describes the message livekit.proto.TrackEvent.
 * Use `create(TrackEventSchema)` to create a new message.
 */
export const TrackEventSchema = /*@__PURE__*/ messageDesc(file_track, 7);
/**
 * Describes the message livekit.proto.TrackPublicationInfo.
 * Use `create(TrackPublicationInfoSchema)` to create a new message.
 */
export const TrackPublicationInfoSchema = /*@__PURE__*/ messageDesc(file_track, 8);
/**
 * Describes the message livekit.proto.OwnedTrackPublication.
 * Use `create(OwnedTrackPublicationSchema)` to create a new message.
 */
export const OwnedTrackPublicationSchema = /*@__PURE__*/ messageDesc(file_track, 9);
/**
 * Describes the message livekit.proto.TrackInfo.
 * Use `create(TrackInfoSchema)` to create a new message.
 */
export const TrackInfoSchema = /*@__PURE__*/ messageDesc(file_track, 10);
/**
 * Describes the message livekit.proto.OwnedTrack.
 * Use `create(OwnedTrackSchema)` to create a new message.
 */
export const OwnedTrackSchema = /*@__PURE__*/ messageDesc(file_track, 11);
/**
 * Describes the message livekit.proto.LocalTrackMuteRequest.
 * Use `create(LocalTrackMuteRequestSchema)` to create a new message.
 */
export const LocalTrackMuteRequestSchema = /*@__PURE__*/ messageDesc(file_track, 12);
/**
 * Describes the message livekit.proto.LocalTrackMuteResponse.
 * Use `create(LocalTrackMuteResponseSchema)` to create a new message.
 */
export const LocalTrackMuteResponseSchema = /*@__PURE__*/ messageDesc(file_track, 13);
/**
 * Describes the message livekit.proto.EnableRemoteTrackRequest.
 * Use `create(EnableRemoteTrackRequestSchema)` to create a new message.
 */
export const EnableRemoteTrackRequestSchema = /*@__PURE__*/ messageDesc(file_track, 14);
/**
 * Describes the message livekit.proto.EnableRemoteTrackResponse.
 * Use `create(EnableRemoteTrackResponseSchema)` to create a new message.
 */
export const EnableRemoteTrackResponseSchema = /*@__PURE__*/ messageDesc(file_track, 15);
/**
 * @generated from enum livekit.proto.TrackKind
 */
export var TrackKind;
(function (TrackKind) {
    /**
     * @generated from enum value: KIND_UNKNOWN = 0;
     */
    TrackKind[TrackKind["KIND_UNKNOWN"] = 0] = "KIND_UNKNOWN";
    /**
     * @generated from enum value: KIND_AUDIO = 1;
     */
    TrackKind[TrackKind["KIND_AUDIO"] = 1] = "KIND_AUDIO";
    /**
     * @generated from enum value: KIND_VIDEO = 2;
     */
    TrackKind[TrackKind["KIND_VIDEO"] = 2] = "KIND_VIDEO";
})(TrackKind || (TrackKind = {}));
/**
 * Describes the enum livekit.proto.TrackKind.
 */
export const TrackKindSchema = /*@__PURE__*/ enumDesc(file_track, 0);
/**
 * @generated from enum livekit.proto.TrackSource
 */
export var TrackSource;
(function (TrackSource) {
    /**
     * @generated from enum value: SOURCE_UNKNOWN = 0;
     */
    TrackSource[TrackSource["SOURCE_UNKNOWN"] = 0] = "SOURCE_UNKNOWN";
    /**
     * @generated from enum value: SOURCE_CAMERA = 1;
     */
    TrackSource[TrackSource["SOURCE_CAMERA"] = 1] = "SOURCE_CAMERA";
    /**
     * @generated from enum value: SOURCE_MICROPHONE = 2;
     */
    TrackSource[TrackSource["SOURCE_MICROPHONE"] = 2] = "SOURCE_MICROPHONE";
    /**
     * @generated from enum value: SOURCE_SCREENSHARE = 3;
     */
    TrackSource[TrackSource["SOURCE_SCREENSHARE"] = 3] = "SOURCE_SCREENSHARE";
    /**
     * @generated from enum value: SOURCE_SCREENSHARE_AUDIO = 4;
     */
    TrackSource[TrackSource["SOURCE_SCREENSHARE_AUDIO"] = 4] = "SOURCE_SCREENSHARE_AUDIO";
})(TrackSource || (TrackSource = {}));
/**
 * Describes the enum livekit.proto.TrackSource.
 */
export const TrackSourceSchema = /*@__PURE__*/ enumDesc(file_track, 1);
/**
 * @generated from enum livekit.proto.StreamState
 */
export var StreamState;
(function (StreamState) {
    /**
     * @generated from enum value: STATE_UNKNOWN = 0;
     */
    StreamState[StreamState["STATE_UNKNOWN"] = 0] = "STATE_UNKNOWN";
    /**
     * @generated from enum value: STATE_ACTIVE = 1;
     */
    StreamState[StreamState["STATE_ACTIVE"] = 1] = "STATE_ACTIVE";
    /**
     * @generated from enum value: STATE_PAUSED = 2;
     */
    StreamState[StreamState["STATE_PAUSED"] = 2] = "STATE_PAUSED";
})(StreamState || (StreamState = {}));
/**
 * Describes the enum livekit.proto.StreamState.
 */
export const StreamStateSchema = /*@__PURE__*/ enumDesc(file_track, 2);
//# sourceMappingURL=track_pb.js.map