import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file handle.proto.
 */
export declare const file_handle: GenFile;
/**
 * # Safety
 * The foreign language is responsable for disposing handles
 * Forgetting to dispose the handle may lead to memory leaks
 *
 * Dropping a handle doesn't necessarily mean that the object is destroyed if it is still used
 * on the FfiServer (Atomic reference counting)
 *
 * When refering to a handle without owning it, we just use a uint32 without this message.
 * (the variable name is suffixed with "_handle")
 *
 * @generated from message livekit.proto.FfiOwnedHandle
 */
export type FfiOwnedHandle = Message<"livekit.proto.FfiOwnedHandle"> & {
    /**
     * @generated from field: required uint64 id = 1;
     */
    id: bigint;
};
/**
 * Describes the message livekit.proto.FfiOwnedHandle.
 * Use `create(FfiOwnedHandleSchema)` to create a new message.
 */
export declare const FfiOwnedHandleSchema: GenMessage<FfiOwnedHandle>;
//# sourceMappingURL=handle_pb.d.ts.map