// Copyright 2023 LiveKit, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_handle } from "./handle_pb.js";
import { file_track } from "./track_pb.js";
/**
 * Describes the file video_frame.proto.
 */
export const file_video_frame = /*@__PURE__*/ fileDesc("ChF2aWRlb19mcmFtZS5wcm90bxINbGl2ZWtpdC5wcm90byKlAQoVTmV3VmlkZW9TdHJlYW1SZXF1ZXN0EhQKDHRyYWNrX2hhbmRsZRgBIAIoBBIsCgR0eXBlGAIgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1N0cmVhbVR5cGUSLgoGZm9ybWF0GAMgASgOMh4ubGl2ZWtpdC5wcm90by5WaWRlb0J1ZmZlclR5cGUSGAoQbm9ybWFsaXplX3N0cmlkZRgEIAEoCCJJChZOZXdWaWRlb1N0cmVhbVJlc3BvbnNlEi8KBnN0cmVhbRgBIAIoCzIfLmxpdmVraXQucHJvdG8uT3duZWRWaWRlb1N0cmVhbSLpAQohVmlkZW9TdHJlYW1Gcm9tUGFydGljaXBhbnRSZXF1ZXN0EhoKEnBhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIsCgR0eXBlGAIgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1N0cmVhbVR5cGUSMAoMdHJhY2tfc291cmNlGAMgAigOMhoubGl2ZWtpdC5wcm90by5UcmFja1NvdXJjZRIuCgZmb3JtYXQYBCABKA4yHi5saXZla2l0LnByb3RvLlZpZGVvQnVmZmVyVHlwZRIYChBub3JtYWxpemVfc3RyaWRlGAUgASgIIlUKIlZpZGVvU3RyZWFtRnJvbVBhcnRpY2lwYW50UmVzcG9uc2USLwoGc3RyZWFtGAEgAigLMh8ubGl2ZWtpdC5wcm90by5Pd25lZFZpZGVvU3RyZWFtIn8KFU5ld1ZpZGVvU291cmNlUmVxdWVzdBIsCgR0eXBlGAEgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1NvdXJjZVR5cGUSOAoKcmVzb2x1dGlvbhgCIAIoCzIkLmxpdmVraXQucHJvdG8uVmlkZW9Tb3VyY2VSZXNvbHV0aW9uIkkKFk5ld1ZpZGVvU291cmNlUmVzcG9uc2USLwoGc291cmNlGAEgAigLMh8ubGl2ZWtpdC5wcm90by5Pd25lZFZpZGVvU291cmNlIqcBChhDYXB0dXJlVmlkZW9GcmFtZVJlcXVlc3QSFQoNc291cmNlX2hhbmRsZRgBIAIoBBIuCgZidWZmZXIYAiACKAsyHi5saXZla2l0LnByb3RvLlZpZGVvQnVmZmVySW5mbxIUCgx0aW1lc3RhbXBfdXMYAyACKAMSLgoIcm90YXRpb24YBCACKA4yHC5saXZla2l0LnByb3RvLlZpZGVvUm90YXRpb24iGwoZQ2FwdHVyZVZpZGVvRnJhbWVSZXNwb25zZSKHAQoTVmlkZW9Db252ZXJ0UmVxdWVzdBIOCgZmbGlwX3kYASABKAgSLgoGYnVmZmVyGAIgAigLMh4ubGl2ZWtpdC5wcm90by5WaWRlb0J1ZmZlckluZm8SMAoIZHN0X3R5cGUYAyACKA4yHi5saXZla2l0LnByb3RvLlZpZGVvQnVmZmVyVHlwZSJlChRWaWRlb0NvbnZlcnRSZXNwb25zZRIPCgVlcnJvchgBIAEoCUgAEjEKBmJ1ZmZlchgCIAEoCzIfLmxpdmVraXQucHJvdG8uT3duZWRWaWRlb0J1ZmZlckgAQgkKB21lc3NhZ2UiRAoPVmlkZW9SZXNvbHV0aW9uEg0KBXdpZHRoGAEgAigNEg4KBmhlaWdodBgCIAIoDRISCgpmcmFtZV9yYXRlGAMgAigBIoMCCg9WaWRlb0J1ZmZlckluZm8SLAoEdHlwZRgBIAIoDjIeLmxpdmVraXQucHJvdG8uVmlkZW9CdWZmZXJUeXBlEg0KBXdpZHRoGAIgAigNEg4KBmhlaWdodBgDIAIoDRIQCghkYXRhX3B0chgEIAIoBBIOCgZzdHJpZGUYBiACKA0SQAoKY29tcG9uZW50cxgHIAMoCzIsLmxpdmVraXQucHJvdG8uVmlkZW9CdWZmZXJJbmZvLkNvbXBvbmVudEluZm8aPwoNQ29tcG9uZW50SW5mbxIQCghkYXRhX3B0chgBIAIoBBIOCgZzdHJpZGUYAiACKA0SDAoEc2l6ZRgDIAIoDSJvChBPd25lZFZpZGVvQnVmZmVyEi0KBmhhbmRsZRgBIAIoCzIdLmxpdmVraXQucHJvdG8uRmZpT3duZWRIYW5kbGUSLAoEaW5mbxgCIAIoCzIeLmxpdmVraXQucHJvdG8uVmlkZW9CdWZmZXJJbmZvIj8KD1ZpZGVvU3RyZWFtSW5mbxIsCgR0eXBlGAEgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1N0cmVhbVR5cGUibwoQT3duZWRWaWRlb1N0cmVhbRItCgZoYW5kbGUYASACKAsyHS5saXZla2l0LnByb3RvLkZmaU93bmVkSGFuZGxlEiwKBGluZm8YAiACKAsyHi5saXZla2l0LnByb3RvLlZpZGVvU3RyZWFtSW5mbyKfAQoQVmlkZW9TdHJlYW1FdmVudBIVCg1zdHJlYW1faGFuZGxlGAEgAigEEjsKDmZyYW1lX3JlY2VpdmVkGAIgASgLMiEubGl2ZWtpdC5wcm90by5WaWRlb0ZyYW1lUmVjZWl2ZWRIABIsCgNlb3MYAyABKAsyHS5saXZla2l0LnByb3RvLlZpZGVvU3RyZWFtRU9TSABCCQoHbWVzc2FnZSKLAQoSVmlkZW9GcmFtZVJlY2VpdmVkEi8KBmJ1ZmZlchgBIAIoCzIfLmxpdmVraXQucHJvdG8uT3duZWRWaWRlb0J1ZmZlchIUCgx0aW1lc3RhbXBfdXMYAiACKAMSLgoIcm90YXRpb24YAyACKA4yHC5saXZla2l0LnByb3RvLlZpZGVvUm90YXRpb24iEAoOVmlkZW9TdHJlYW1FT1MiNgoVVmlkZW9Tb3VyY2VSZXNvbHV0aW9uEg0KBXdpZHRoGAEgAigNEg4KBmhlaWdodBgCIAIoDSI/Cg9WaWRlb1NvdXJjZUluZm8SLAoEdHlwZRgBIAIoDjIeLmxpdmVraXQucHJvdG8uVmlkZW9Tb3VyY2VUeXBlIm8KEE93bmVkVmlkZW9Tb3VyY2USLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRIsCgRpbmZvGAIgAigLMh4ubGl2ZWtpdC5wcm90by5WaWRlb1NvdXJjZUluZm8qMQoKVmlkZW9Db2RlYxIHCgNWUDgQABIICgRIMjY0EAESBwoDQVYxEAISBwoDVlA5EAMqbAoNVmlkZW9Sb3RhdGlvbhIUChBWSURFT19ST1RBVElPTl8wEAASFQoRVklERU9fUk9UQVRJT05fOTAQARIWChJWSURFT19ST1RBVElPTl8xODAQAhIWChJWSURFT19ST1RBVElPTl8yNzAQAyqBAQoPVmlkZW9CdWZmZXJUeXBlEggKBFJHQkEQABIICgRBQkdSEAESCAoEQVJHQhACEggKBEJHUkEQAxIJCgVSR0IyNBAEEggKBEk0MjAQBRIJCgVJNDIwQRAGEggKBEk0MjIQBxIICgRJNDQ0EAgSCAoESTAxMBAJEggKBE5WMTIQCipZCg9WaWRlb1N0cmVhbVR5cGUSFwoTVklERU9fU1RSRUFNX05BVElWRRAAEhYKElZJREVPX1NUUkVBTV9XRUJHTBABEhUKEVZJREVPX1NUUkVBTV9IVE1MEAIqKgoPVmlkZW9Tb3VyY2VUeXBlEhcKE1ZJREVPX1NPVVJDRV9OQVRJVkUQAEIQqgINTGl2ZUtpdC5Qcm90bw", [file_handle, file_track]);
/**
 * Describes the message livekit.proto.NewVideoStreamRequest.
 * Use `create(NewVideoStreamRequestSchema)` to create a new message.
 */
export const NewVideoStreamRequestSchema = /*@__PURE__*/ messageDesc(file_video_frame, 0);
/**
 * Describes the message livekit.proto.NewVideoStreamResponse.
 * Use `create(NewVideoStreamResponseSchema)` to create a new message.
 */
export const NewVideoStreamResponseSchema = /*@__PURE__*/ messageDesc(file_video_frame, 1);
/**
 * Describes the message livekit.proto.VideoStreamFromParticipantRequest.
 * Use `create(VideoStreamFromParticipantRequestSchema)` to create a new message.
 */
export const VideoStreamFromParticipantRequestSchema = /*@__PURE__*/ messageDesc(file_video_frame, 2);
/**
 * Describes the message livekit.proto.VideoStreamFromParticipantResponse.
 * Use `create(VideoStreamFromParticipantResponseSchema)` to create a new message.
 */
export const VideoStreamFromParticipantResponseSchema = /*@__PURE__*/ messageDesc(file_video_frame, 3);
/**
 * Describes the message livekit.proto.NewVideoSourceRequest.
 * Use `create(NewVideoSourceRequestSchema)` to create a new message.
 */
export const NewVideoSourceRequestSchema = /*@__PURE__*/ messageDesc(file_video_frame, 4);
/**
 * Describes the message livekit.proto.NewVideoSourceResponse.
 * Use `create(NewVideoSourceResponseSchema)` to create a new message.
 */
export const NewVideoSourceResponseSchema = /*@__PURE__*/ messageDesc(file_video_frame, 5);
/**
 * Describes the message livekit.proto.CaptureVideoFrameRequest.
 * Use `create(CaptureVideoFrameRequestSchema)` to create a new message.
 */
export const CaptureVideoFrameRequestSchema = /*@__PURE__*/ messageDesc(file_video_frame, 6);
/**
 * Describes the message livekit.proto.CaptureVideoFrameResponse.
 * Use `create(CaptureVideoFrameResponseSchema)` to create a new message.
 */
export const CaptureVideoFrameResponseSchema = /*@__PURE__*/ messageDesc(file_video_frame, 7);
/**
 * Describes the message livekit.proto.VideoConvertRequest.
 * Use `create(VideoConvertRequestSchema)` to create a new message.
 */
export const VideoConvertRequestSchema = /*@__PURE__*/ messageDesc(file_video_frame, 8);
/**
 * Describes the message livekit.proto.VideoConvertResponse.
 * Use `create(VideoConvertResponseSchema)` to create a new message.
 */
export const VideoConvertResponseSchema = /*@__PURE__*/ messageDesc(file_video_frame, 9);
/**
 * Describes the message livekit.proto.VideoResolution.
 * Use `create(VideoResolutionSchema)` to create a new message.
 */
export const VideoResolutionSchema = /*@__PURE__*/ messageDesc(file_video_frame, 10);
/**
 * Describes the message livekit.proto.VideoBufferInfo.
 * Use `create(VideoBufferInfoSchema)` to create a new message.
 */
export const VideoBufferInfoSchema = /*@__PURE__*/ messageDesc(file_video_frame, 11);
/**
 * Describes the message livekit.proto.VideoBufferInfo.ComponentInfo.
 * Use `create(VideoBufferInfo_ComponentInfoSchema)` to create a new message.
 */
export const VideoBufferInfo_ComponentInfoSchema = /*@__PURE__*/ messageDesc(file_video_frame, 11, 0);
/**
 * Describes the message livekit.proto.OwnedVideoBuffer.
 * Use `create(OwnedVideoBufferSchema)` to create a new message.
 */
export const OwnedVideoBufferSchema = /*@__PURE__*/ messageDesc(file_video_frame, 12);
/**
 * Describes the message livekit.proto.VideoStreamInfo.
 * Use `create(VideoStreamInfoSchema)` to create a new message.
 */
export const VideoStreamInfoSchema = /*@__PURE__*/ messageDesc(file_video_frame, 13);
/**
 * Describes the message livekit.proto.OwnedVideoStream.
 * Use `create(OwnedVideoStreamSchema)` to create a new message.
 */
export const OwnedVideoStreamSchema = /*@__PURE__*/ messageDesc(file_video_frame, 14);
/**
 * Describes the message livekit.proto.VideoStreamEvent.
 * Use `create(VideoStreamEventSchema)` to create a new message.
 */
export const VideoStreamEventSchema = /*@__PURE__*/ messageDesc(file_video_frame, 15);
/**
 * Describes the message livekit.proto.VideoFrameReceived.
 * Use `create(VideoFrameReceivedSchema)` to create a new message.
 */
export const VideoFrameReceivedSchema = /*@__PURE__*/ messageDesc(file_video_frame, 16);
/**
 * Describes the message livekit.proto.VideoStreamEOS.
 * Use `create(VideoStreamEOSSchema)` to create a new message.
 */
export const VideoStreamEOSSchema = /*@__PURE__*/ messageDesc(file_video_frame, 17);
/**
 * Describes the message livekit.proto.VideoSourceResolution.
 * Use `create(VideoSourceResolutionSchema)` to create a new message.
 */
export const VideoSourceResolutionSchema = /*@__PURE__*/ messageDesc(file_video_frame, 18);
/**
 * Describes the message livekit.proto.VideoSourceInfo.
 * Use `create(VideoSourceInfoSchema)` to create a new message.
 */
export const VideoSourceInfoSchema = /*@__PURE__*/ messageDesc(file_video_frame, 19);
/**
 * Describes the message livekit.proto.OwnedVideoSource.
 * Use `create(OwnedVideoSourceSchema)` to create a new message.
 */
export const OwnedVideoSourceSchema = /*@__PURE__*/ messageDesc(file_video_frame, 20);
/**
 * @generated from enum livekit.proto.VideoCodec
 */
export var VideoCodec;
(function (VideoCodec) {
    /**
     * @generated from enum value: VP8 = 0;
     */
    VideoCodec[VideoCodec["VP8"] = 0] = "VP8";
    /**
     * @generated from enum value: H264 = 1;
     */
    VideoCodec[VideoCodec["H264"] = 1] = "H264";
    /**
     * @generated from enum value: AV1 = 2;
     */
    VideoCodec[VideoCodec["AV1"] = 2] = "AV1";
    /**
     * @generated from enum value: VP9 = 3;
     */
    VideoCodec[VideoCodec["VP9"] = 3] = "VP9";
})(VideoCodec || (VideoCodec = {}));
/**
 * Describes the enum livekit.proto.VideoCodec.
 */
export const VideoCodecSchema = /*@__PURE__*/ enumDesc(file_video_frame, 0);
/**
 * @generated from enum livekit.proto.VideoRotation
 */
export var VideoRotation;
(function (VideoRotation) {
    /**
     * @generated from enum value: VIDEO_ROTATION_0 = 0;
     */
    VideoRotation[VideoRotation["VIDEO_ROTATION_0"] = 0] = "VIDEO_ROTATION_0";
    /**
     * @generated from enum value: VIDEO_ROTATION_90 = 1;
     */
    VideoRotation[VideoRotation["VIDEO_ROTATION_90"] = 1] = "VIDEO_ROTATION_90";
    /**
     * @generated from enum value: VIDEO_ROTATION_180 = 2;
     */
    VideoRotation[VideoRotation["VIDEO_ROTATION_180"] = 2] = "VIDEO_ROTATION_180";
    /**
     * @generated from enum value: VIDEO_ROTATION_270 = 3;
     */
    VideoRotation[VideoRotation["VIDEO_ROTATION_270"] = 3] = "VIDEO_ROTATION_270";
})(VideoRotation || (VideoRotation = {}));
/**
 * Describes the enum livekit.proto.VideoRotation.
 */
export const VideoRotationSchema = /*@__PURE__*/ enumDesc(file_video_frame, 1);
/**
 * @generated from enum livekit.proto.VideoBufferType
 */
export var VideoBufferType;
(function (VideoBufferType) {
    /**
     * @generated from enum value: RGBA = 0;
     */
    VideoBufferType[VideoBufferType["RGBA"] = 0] = "RGBA";
    /**
     * @generated from enum value: ABGR = 1;
     */
    VideoBufferType[VideoBufferType["ABGR"] = 1] = "ABGR";
    /**
     * @generated from enum value: ARGB = 2;
     */
    VideoBufferType[VideoBufferType["ARGB"] = 2] = "ARGB";
    /**
     * @generated from enum value: BGRA = 3;
     */
    VideoBufferType[VideoBufferType["BGRA"] = 3] = "BGRA";
    /**
     * @generated from enum value: RGB24 = 4;
     */
    VideoBufferType[VideoBufferType["RGB24"] = 4] = "RGB24";
    /**
     * @generated from enum value: I420 = 5;
     */
    VideoBufferType[VideoBufferType["I420"] = 5] = "I420";
    /**
     * @generated from enum value: I420A = 6;
     */
    VideoBufferType[VideoBufferType["I420A"] = 6] = "I420A";
    /**
     * @generated from enum value: I422 = 7;
     */
    VideoBufferType[VideoBufferType["I422"] = 7] = "I422";
    /**
     * @generated from enum value: I444 = 8;
     */
    VideoBufferType[VideoBufferType["I444"] = 8] = "I444";
    /**
     * @generated from enum value: I010 = 9;
     */
    VideoBufferType[VideoBufferType["I010"] = 9] = "I010";
    /**
     * @generated from enum value: NV12 = 10;
     */
    VideoBufferType[VideoBufferType["NV12"] = 10] = "NV12";
})(VideoBufferType || (VideoBufferType = {}));
/**
 * Describes the enum livekit.proto.VideoBufferType.
 */
export const VideoBufferTypeSchema = /*@__PURE__*/ enumDesc(file_video_frame, 2);
/**
 * @generated from enum livekit.proto.VideoStreamType
 */
export var VideoStreamType;
(function (VideoStreamType) {
    /**
     * @generated from enum value: VIDEO_STREAM_NATIVE = 0;
     */
    VideoStreamType[VideoStreamType["VIDEO_STREAM_NATIVE"] = 0] = "VIDEO_STREAM_NATIVE";
    /**
     * @generated from enum value: VIDEO_STREAM_WEBGL = 1;
     */
    VideoStreamType[VideoStreamType["VIDEO_STREAM_WEBGL"] = 1] = "VIDEO_STREAM_WEBGL";
    /**
     * @generated from enum value: VIDEO_STREAM_HTML = 2;
     */
    VideoStreamType[VideoStreamType["VIDEO_STREAM_HTML"] = 2] = "VIDEO_STREAM_HTML";
})(VideoStreamType || (VideoStreamType = {}));
/**
 * Describes the enum livekit.proto.VideoStreamType.
 */
export const VideoStreamTypeSchema = /*@__PURE__*/ enumDesc(file_video_frame, 3);
/**
 * @generated from enum livekit.proto.VideoSourceType
 */
export var VideoSourceType;
(function (VideoSourceType) {
    /**
     * @generated from enum value: VIDEO_SOURCE_NATIVE = 0;
     */
    VideoSourceType[VideoSourceType["VIDEO_SOURCE_NATIVE"] = 0] = "VIDEO_SOURCE_NATIVE";
})(VideoSourceType || (VideoSourceType = {}));
/**
 * Describes the enum livekit.proto.VideoSourceType.
 */
export const VideoSourceTypeSchema = /*@__PURE__*/ enumDesc(file_video_frame, 4);
//# sourceMappingURL=video_frame_pb.js.map