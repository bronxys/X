import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file rpc.proto.
 */
export declare const file_rpc: GenFile;
/**
 * @generated from message livekit.proto.RpcError
 */
export type RpcError = Message<"livekit.proto.RpcError"> & {
    /**
     * @generated from field: required uint32 code = 1;
     */
    code: number;
    /**
     * @generated from field: required string message = 2;
     */
    message: string;
    /**
     * @generated from field: optional string data = 3;
     */
    data: string;
};
/**
 * Describes the message livekit.proto.RpcError.
 * Use `create(RpcErrorSchema)` to create a new message.
 */
export declare const RpcErrorSchema: GenMessage<RpcError>;
/**
 * FFI Requests
 *
 * @generated from message livekit.proto.PerformRpcRequest
 */
export type PerformRpcRequest = Message<"livekit.proto.PerformRpcRequest"> & {
    /**
     * @generated from field: required uint64 local_participant_handle = 1;
     */
    localParticipantHandle: bigint;
    /**
     * @generated from field: required string destination_identity = 2;
     */
    destinationIdentity: string;
    /**
     * @generated from field: required string method = 3;
     */
    method: string;
    /**
     * @generated from field: required string payload = 4;
     */
    payload: string;
    /**
     * @generated from field: optional uint32 response_timeout_ms = 5;
     */
    responseTimeoutMs: number;
};
/**
 * Describes the message livekit.proto.PerformRpcRequest.
 * Use `create(PerformRpcRequestSchema)` to create a new message.
 */
export declare const PerformRpcRequestSchema: GenMessage<PerformRpcRequest>;
/**
 * @generated from message livekit.proto.RegisterRpcMethodRequest
 */
export type RegisterRpcMethodRequest = Message<"livekit.proto.RegisterRpcMethodRequest"> & {
    /**
     * @generated from field: required uint64 local_participant_handle = 1;
     */
    localParticipantHandle: bigint;
    /**
     * @generated from field: required string method = 2;
     */
    method: string;
};
/**
 * Describes the message livekit.proto.RegisterRpcMethodRequest.
 * Use `create(RegisterRpcMethodRequestSchema)` to create a new message.
 */
export declare const RegisterRpcMethodRequestSchema: GenMessage<RegisterRpcMethodRequest>;
/**
 * @generated from message livekit.proto.UnregisterRpcMethodRequest
 */
export type UnregisterRpcMethodRequest = Message<"livekit.proto.UnregisterRpcMethodRequest"> & {
    /**
     * @generated from field: required uint64 local_participant_handle = 1;
     */
    localParticipantHandle: bigint;
    /**
     * @generated from field: required string method = 2;
     */
    method: string;
};
/**
 * Describes the message livekit.proto.UnregisterRpcMethodRequest.
 * Use `create(UnregisterRpcMethodRequestSchema)` to create a new message.
 */
export declare const UnregisterRpcMethodRequestSchema: GenMessage<UnregisterRpcMethodRequest>;
/**
 * @generated from message livekit.proto.RpcMethodInvocationResponseRequest
 */
export type RpcMethodInvocationResponseRequest = Message<"livekit.proto.RpcMethodInvocationResponseRequest"> & {
    /**
     * @generated from field: required uint64 local_participant_handle = 1;
     */
    localParticipantHandle: bigint;
    /**
     * @generated from field: required uint64 invocation_id = 2;
     */
    invocationId: bigint;
    /**
     * @generated from field: optional string payload = 3;
     */
    payload: string;
    /**
     * @generated from field: optional livekit.proto.RpcError error = 4;
     */
    error?: RpcError;
};
/**
 * Describes the message livekit.proto.RpcMethodInvocationResponseRequest.
 * Use `create(RpcMethodInvocationResponseRequestSchema)` to create a new message.
 */
export declare const RpcMethodInvocationResponseRequestSchema: GenMessage<RpcMethodInvocationResponseRequest>;
/**
 * FFI Responses
 *
 * @generated from message livekit.proto.PerformRpcResponse
 */
export type PerformRpcResponse = Message<"livekit.proto.PerformRpcResponse"> & {
    /**
     * @generated from field: required uint64 async_id = 1;
     */
    asyncId: bigint;
};
/**
 * Describes the message livekit.proto.PerformRpcResponse.
 * Use `create(PerformRpcResponseSchema)` to create a new message.
 */
export declare const PerformRpcResponseSchema: GenMessage<PerformRpcResponse>;
/**
 * @generated from message livekit.proto.RegisterRpcMethodResponse
 */
export type RegisterRpcMethodResponse = Message<"livekit.proto.RegisterRpcMethodResponse"> & {};
/**
 * Describes the message livekit.proto.RegisterRpcMethodResponse.
 * Use `create(RegisterRpcMethodResponseSchema)` to create a new message.
 */
export declare const RegisterRpcMethodResponseSchema: GenMessage<RegisterRpcMethodResponse>;
/**
 * @generated from message livekit.proto.UnregisterRpcMethodResponse
 */
export type UnregisterRpcMethodResponse = Message<"livekit.proto.UnregisterRpcMethodResponse"> & {};
/**
 * Describes the message livekit.proto.UnregisterRpcMethodResponse.
 * Use `create(UnregisterRpcMethodResponseSchema)` to create a new message.
 */
export declare const UnregisterRpcMethodResponseSchema: GenMessage<UnregisterRpcMethodResponse>;
/**
 * @generated from message livekit.proto.RpcMethodInvocationResponseResponse
 */
export type RpcMethodInvocationResponseResponse = Message<"livekit.proto.RpcMethodInvocationResponseResponse"> & {
    /**
     * @generated from field: optional string error = 1;
     */
    error: string;
};
/**
 * Describes the message livekit.proto.RpcMethodInvocationResponseResponse.
 * Use `create(RpcMethodInvocationResponseResponseSchema)` to create a new message.
 */
export declare const RpcMethodInvocationResponseResponseSchema: GenMessage<RpcMethodInvocationResponseResponse>;
/**
 * FFI Callbacks
 *
 * @generated from message livekit.proto.PerformRpcCallback
 */
export type PerformRpcCallback = Message<"livekit.proto.PerformRpcCallback"> & {
    /**
     * @generated from field: required uint64 async_id = 1;
     */
    asyncId: bigint;
    /**
     * @generated from field: optional string payload = 2;
     */
    payload: string;
    /**
     * @generated from field: optional livekit.proto.RpcError error = 3;
     */
    error?: RpcError;
};
/**
 * Describes the message livekit.proto.PerformRpcCallback.
 * Use `create(PerformRpcCallbackSchema)` to create a new message.
 */
export declare const PerformRpcCallbackSchema: GenMessage<PerformRpcCallback>;
/**
 * FFI Events
 *
 * @generated from message livekit.proto.RpcMethodInvocationEvent
 */
export type RpcMethodInvocationEvent = Message<"livekit.proto.RpcMethodInvocationEvent"> & {
    /**
     * @generated from field: required uint64 local_participant_handle = 1;
     */
    localParticipantHandle: bigint;
    /**
     * @generated from field: required uint64 invocation_id = 2;
     */
    invocationId: bigint;
    /**
     * @generated from field: required string method = 3;
     */
    method: string;
    /**
     * @generated from field: required string request_id = 4;
     */
    requestId: string;
    /**
     * @generated from field: required string caller_identity = 5;
     */
    callerIdentity: string;
    /**
     * @generated from field: required string payload = 6;
     */
    payload: string;
    /**
     * @generated from field: required uint32 response_timeout_ms = 7;
     */
    responseTimeoutMs: number;
};
/**
 * Describes the message livekit.proto.RpcMethodInvocationEvent.
 * Use `create(RpcMethodInvocationEventSchema)` to create a new message.
 */
export declare const RpcMethodInvocationEventSchema: GenMessage<RpcMethodInvocationEvent>;
//# sourceMappingURL=rpc_pb.d.ts.map